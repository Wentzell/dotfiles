#################################################
##
## 	.aliases
##
##	include in .bashrc/.zshrc by
##
##	if [ -f ~/.aliases ]; then
##	    . ~/.aliases
##	fi
##
##################################################

## COLOR by \[\033COL_ID[0m\]  TEXT \[\033[0m\]
#Black       0;30     Dark Gray     1;30
#Blue        0;34     Light Blue    1;34
#Green       0;32     Light Green   1;32
#Cyan        0;36     Light Cyan    1;36
#Red         0;31     Light Red     1;31
#Purple      0;35     Light Purple  1;35
#Brown       0;33     Yellow        1;33
#Light Gray  0;37     White         1;37

##################### My aliases  ######################

	# General
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'
alias xkb='setxkbmap -option "ctrl:nocaps"'
alias fn='find -name'
alias tarf='tar -xvf'
alias resetX="export DISPLAY=:0.0"
alias rubber="rubber -m pdftex"
alias vpn='sudo vpnc --local-port 0'
2png () {
  convert -density 300 $1 -resize 1024x1024 $1.png
}
svg2png () {
  inkscape -z -d 300 -e $(basename $1 .svg).png $1
}
aur () {
  git clone https://aur.archlinux.org/$1
}
alias paclst='pacman -Qqettn'
alias aurlst='pacman -Qqettm'

	# ssh
alias ssh="TERM=xterm ssh"
alias sshx="TERM=xterm ssh -Y"
alias sshnokey="ssh -X -o PubkeyAuthentication=no"

	# vim
alias vimsrc="vim **/*.c(N) **/*.h(N) **/*.cpp(N) **/*.hpp(N) **/*.hxx(N)"
alias vimtex='vim --servername $(basename *.tex.latexmain .tex.latexmain) *.tex content/*.tex(N) settings/*.tex(N)'

	# apt
alias apts="apt-cache search"
alias apti="sudo apt-get install"
alias aptr="sudo apt-get remove"

	# tmux
#alias tmux="history -w;tmux"  # write history file when opening tmux, fix vim colors in tmux, 
alias tmux-share="tmux -S /var/tmux/pair_sock new -s shared"
alias tls='tmux list-sessions'
alias tat='tmux attach-session -t'
alias tkill='tmux kill-session -t'
tmuxdev () {
  tmux new-session -d -n Coding -c ~/Dropbox/Coding
  tmux neww -n Coding -c ~/Dropbox/Coding
  tmux neww -n Coding -c ~/Dropbox/Coding
  tmux neww -n Coding -c ~/Dropbox/Coding
  tmux neww -n Coding -c ~/Dropbox/Coding
  tmux neww -n Coding -c ~/Dropbox/Coding
  tmux neww -n System -c ~/Dropbox
  tmux neww -n System -c ~/Dropbox
  tmux neww -n Jupyter -c ~/Dropbox/Coding/Notebooks /home/nwentzel/opt/triqs/bin/ipytriqs_notebook
  tmux neww -n Latex -c ~/Dropbox/Latex
  tmux neww -n Latex -c ~/Dropbox/Latex
  tmux selectw -t 1
  tmux attach
}


        # Develop
alias make="make -j 8"
alias triqs++='g++ -std=c++17 -ltriqs -lmpi -lmpi_cxx -lpython2.7 -lblas -llapack -lgtest -lhdf5 -Wno-register -DHAS_OPTIONAL_HEADER' 
alias activate='source ~/opt/python/bin/activate'
alias ctags='ctags -R --options=$HOME/.ctagsrc'
alias valmem='valgrind --leak-check=full --max-stackframe=4000000'
alias cmdbg='cmake -DCMAKE_BUILD_TYPE=Debug'
prof() {
  rm -f $1.prof*
  LD_PRELOAD=/home/nwentzel/opt/gperftools/lib/libprofiler.so CPUPROFILE=$1.prof $1
}
pprint() {
  pprof --text $1 $1.prof > $1.prof.txt
  head -n 20 $1.prof.txt
  pprof --gif $1 $1.prof > $1.prof.gif
}
hprof() {
  rm -f $1.hprof*
  LD_PRELOAD=/home/nwentzel/opt/gperftools/lib/libtcmalloc.so HEAPPROFILE=$1.hprof $1
}
hpprint() {
  if [ "$#" -eq 1 ]; then
    for f in $(ls $1.hprof.*.heap); do 
      pprof --text $1 $f > ${f%.*}.txt
      head -n 4 ${f%.*}.txt
      pprof --gif $1 $f > ${f%.*}.gif
    done
  elif [ "$#" -eq 2 ]; then
    f=$(ls -1 $1.hprof.*$2.heap | head -n 1)
    pprof --text $1 $f > ${f%.*}.txt
    head -n 5 ${f%.*}.txt
    pprof --gif $1 $f > ${f%.*}.gif
  fi
}

#tagsrc () {
  #list=()
  #file_endings=(c cpp h hpp hxx py)
  #for i in $@; do
    #if [ -d "$i" ]; then
      #for j in ${file_endings[@]}; do
        #list+=($i/**/*.$j(N))
      #done
    #elif [ -f "$i" ]; then
      #list+=($i)
    #fi
  #done
  #ctags --options=$HOME/.ctagsrc ${list[@]}
#}
